// Generated by CoffeeScript 1.10.0
(function() {
  var assert;

  assert = chai.assert;

  describe('Hand', function() {
    var dealerHand, deck, playerHand;
    deck = null;
    playerHand = null;
    dealerHand = null;
    beforeEach(function() {
      deck = new Deck();
      playerHand = deck.dealPlayer();
      return dealerHand = deck.dealDealer();
    });
    return describe('hit', function() {
      it('should decrease the size of the deck by 1, and increase the hand by 1', function() {
        assert.strictEqual(deck.length, 48);
        playerHand.hit();
        assert.strictEqual(deck.length, 47);
        return assert.strictEqual(playerHand.length, 3);
      });
      it('should not hit after score is 21', function() {
        var score0, score1;
        while (playerHand.scores()[0] < 21 || playerHand.scores()[1] < 21) {
          playerHand.hit();
        }
        score0 = playerHand.scores()[0];
        score1 = playerHand.scores()[1];
        playerHand.hit();
        assert.strictEqual(score0, playerHand.scores()[0]);
        return assert.strictEqual(score1, playerHand.scores()[1]);
      });
      it('should trigger the dealer to play on "stand" (first card flipped)', function() {
        playerHand.stand();
        return setTimeout(function() {
          return assert.strictEqual(dealerHand.at(0).get('revealed'), true);
        }, 5);
      });
      return it('should make the dealer hit until they have a score >= 17', function() {
        var i, results, test;
        i = 0;
        results = [];
        while (i < 100) {
          deck = new Deck();
          dealerHand = deck.dealDealer();
          dealerHand.dealerPlay();
          test = dealerHand.scores()[0] >= 17 || dealerHand.scores()[1] >= 17;
          assert.strictEqual(test, true);
          results.push(i++);
        }
        return results;
      });
    });
  });

}).call(this);

//# sourceMappingURL=HandSpec.js.map
